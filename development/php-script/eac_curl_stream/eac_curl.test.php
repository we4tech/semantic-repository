<?php/** * eac_curl.test.php * test/example for eac_curl.class and eac_streams.class * * PHP version 5 * * @author	   Kevin Burkholder <KBurkholder@EarthAsylum.com> *//* +------------------------------------------------------------------------+   | Copyright 2008, Kevin Burkholder               www.KevinBurkholder.com |   | Some rights reserved.                                                  |   |                                                                        |   | This work is licensed under the Creative Commons GNU Lesser General    |   | Public License. To view a copy of this license, visit                  |   |     http://creativecommons.org/licenses/LGPL/2.1/                      |   |                                                                        |   | Please see the License_LGPL_x.x.txt file for redistribution and use    |   | restrictions. If this file was not included with the distribution of   |   | this software, it may be found here:                                   |   |     http://www.kevinburkholder.com/sw_license.php                      |   |                                                                        |   | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    |   | "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      |   | LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  |   | A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   |   | OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  |   | SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       |   | LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  |   | DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  |   | THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    |   | (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  |   | OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   |   |                                                                        |   +------------------------------------------------------------------------+   |                                                                        |   | Author:     Kevin Burkholder                                           |   |             EarthAsylum Consulting                                     |   |             KBurkholder@EarthAsylum.com                                |   |                                                                        |   +------------------------------------------------------------------------+ *//** a simple GET request using curl: * include('eac_curl.class.php'); * $http = new cURL(); * $result = $http->get('http://www.kevinburkholder.com/PostTest.php'); *//** a simple GET request using streams: * include('eac_streams.class.php'); * $http = new stream(); * $result = $http->get('http://www.kevinburkholder.com/PostTest.php'); */// load initialization code (app specific)	@include($_SERVER['DOCUMENT_ROOT'].'/parameters.inc');// set some fields$fields = array();$fields['FirstName'] 	= "Kevin";$fields['LastName'] 	= "Burkholder";$fields['FullName'] 	= "Kevin J. Burkholder";$fields['Email']		= "kburkholder@earthasylum.com";// set some options using curl_setopt names// see http://us2.php.net/manual/en/function.curl-setopt.php$options = array();$options['CURLOPT_AUTOREFERER'] = 1;$options['CURLOPT_CRLF'] 		= 1;$options['CURLOPT_NOPROGRESS'] 	= 1;if (isset($_GET['streams'])) {	// use streams...	include('eac_streams.class.php');	// instantiate and load options	$http = new stream($options);} else {	// use curl...	include('eac_curl.class.php');	// instantiate and load options	$http = new cURL($options);}// $http->Type == "CURL" or "STREAM"// another way to load options$http->setOptions($options);// Note: setOptions() clears all request headers// call copyHeaders() or header() after setOptions()// add a new (single) option$http->setOption('CURLOPT_BUFFERSIZE', 32768);// copy the http request headers to the curl request// any $_SERVER['HTTP_xxx'] headers are sent with the curl request$http->copyHeaders();// add a header$http->header("X-EAC-".$http->Type."-Test: ".$http->Type." test header");// set username & password (this example is the default for PUT)$http->setOption('CURLOPT_USERPWD',"anonymous:".$_SERVER['SERVER_ADMIN']);// PUT text to a file (there must be a receiver for the put request - see http_put_file.php)$http->put('http://www.kevinburkholder.com/upload/my_file.txt',"this is the text in the file\n");// PUT a file (this example essentially copies the above file)$http->put('http://www.kevinburkholder.com/upload/your_file.txt',"@/upload/my_file.txt");// GET PostTest.php with fields$vars = http_build_query($fields);//if ($timer) $timer->start($http->Type);//$http->setOption('STREAMS_ASYNCRONOUS',1);//for($i = 1; $i < 50; $i++) {	$getR = $http->get('http://www.kevinburkholder.com/PostTest.php?'.$vars);//}//if ($timer) $timer->get($http->Type);// another way to get the results$getR = $http->getLastResult();// email the result (to [required], from, subject, xheader array, line-feed char [\n || \r\n])if ($http->success)	$http->sendLastResult("Kevin Burkholder <kburkholder@earthasylum.com>");else	trigger_error($http->error,E_USER_WARNING);// POST to PostTest.php with fieldsecho $http->post('http://www.kevinburkholder.com/PostTest.php',$fields);// display the response headers, the cURL stats, and our optionsecho "<pre>";echo "response headers ";print_r($http->getHeaders());echo "info ";print_r($http->getInfo());echo "options ";print_r($http->getOptions());echo "</pre>";// $http->success = false on error, else true// $http->error = error message (on error)?>